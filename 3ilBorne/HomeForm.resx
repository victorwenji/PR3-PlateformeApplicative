<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BV8FBwfCBQYG/AUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBweXAwcHSgUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8EBwdFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYGLgMH
        B0kFBgbgBQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wYGBlQGBgZaBQYG/QUG
        Bv8FBgb6BQYG/wUGBv8FBgb/BQYG/wUGBvoFBgb/BQYG/gQEBD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAKBQYG9wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG8wQE
        BD4EBAQ7BAgIQwAAAAsFBweXBQYG/wUGBv8FBwebAAAACwQHB0YGBgZXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAQHB0cFBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG+gUGBqgGBgazBgYGuQYGBigFBgb/BQYG4QgICCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABQUFjQUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG8AUFBb0FBweaBAYGfQQG
        BncEBgZ3BAYGfQUFBZEEBgarBQYG2gUGBv0FBgb+CAgIHwAAAAAAAAAOBQUFNQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBgbTBQYG/wUGBvkEBgawBQUFXwcHBycAAAABAAAACwYG
        BigEBAQ9BAgIRAQICEQEBAQ9CQkJHQAAAAIAAAAAAAAACwQEBDsGBgaLBAYG5AUGBv8FBgbTAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKGgUGBvoFBQWTCQkJHAkJCR4EBgZ3BAYGsQUG
        Bt0FBgb+BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG8wUHB8MFBQWRBgYGUQAAAAcAAAAFBgYGWQUG
        Bt4KCgoaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUzBQUFMAQEBDkGBga0BQYG/QUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQcH6wQG
        Bn8AAAAQAAAACgALCxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgZRBQYG/gUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUHB+sECAhCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUG
        BqQFBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBqcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADBQYG7AUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG7gAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAQICEEFBgb/BQYG/wUGBv8FBwfqBgYGswUFBYwFBQVmBAgIQAYGBioACwsXAAAABAAA
        AAAAAAACAAAAEQALCxcFBQU2BgYGVwQGBnkFBgalBQUF6AUGBv8FBgb/BAgIQgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABQUFjQQGBuUGBgaHBQUFMgAAAAUFBQUxBgYGVQQGBngFBwebBQYGqgYG
        BrQFBQW7BQUFuwQGBq4FBgagBQUFkQUFBWkECAhCAAoKGQAAAAAAAAABBAQEOQUFBZMGBgaDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQVeAAAAEgUFBWEGBga1BQYG9AUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BAYG4wUGBqAECAhDAAAAAgAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQICEEFBgbfBQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgbHBgYGLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYG5gUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgbiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBgZ5BQYG/AUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG8gUFBWEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFBQUvBQYGpQUGBvIFBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUGBv8FBgb/BQYG/wUG
        Bv8FBgb/BQYG/wUGBv8FBgb/BQYG1AYGBoAJCQkbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABwQEBD0EBwd1BQcHmQUFBbwFBgbfBQYG7gUGBu4FBgbuBQYG7gUH
        B+sFBgbdBQYG1AUGBqkEBgZ7BwcHTgALCxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///z////4f///wA//gEAP/ABHj/gBj8fwAQ/D8AEPw/A/j8fz4
        EeP7gBAD/gAwA/wAHh/8AAE/+APB//h//h/5wAPf/gAA//wAAD/4AAAf+AAAH/gf/h/x8A/P/gAAf/gA
        AB/wAAAP+AAAH/wAAD//wAf/////////////////
</value>
  </data>
</root>